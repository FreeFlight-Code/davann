{"version":3,"sources":["Header.js","Video.js","VideoProgram.js","Image.js","Text.js","ImageProgram.js","MobileAlert.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","id","className","Video","_props$video","video","url","title","start","end","mute","width","height","src","concat","frameBorder","allow","allowFullScreen","VideoProgram","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","videoIndex","currentVideo","running","ended","checkVideo","videos","length","console","log","e","hasVideoData","videoIndexIsGood","setState","setTimeout","_this2","nextVideo","delay","reset","_this3","newIndex","src_Video","Component","Image","_props$image","image","alt","Text","_props$text","text","ImageProgram","imageIndex","currentImage","hasImageData","images","imageIndexIsGood","_context","t0","nextImage","src_Text","src_Image","MobileAlert","App","isMobile","window","screen","VideoProgram_VideoProgram","ImageProgram_ImageProgram","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58dd7db9.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function (props){\n    // const title = props.text;\n    // console.log(title.split(''))\n    // var container = document.getElementById('root');\n    // console.log(document.querySelector('#headerContainer'));\n    // const span = document.createElement('span').innerHTML = title;\n    // container.appendChild(span)\n    // console.dir(document)\n\n    return (\n        <div id='headerContainer'>\n            <span className='headerTitle'>D</span>\n            <span className='headerTitle'>e</span>\n            <span className='headerTitle'>a</span>\n            <span className='headerTitle'>r</span>\n            <span className='headerTitle'> </span>\n            <span className='headerTitle'>D</span>\n            <span className='headerTitle'>r</span>\n            <span className='headerTitle'>e</span>\n            <span className='headerTitle'>a</span>\n            <span className='headerTitle'>m</span>\n            <span className='headerTitle'> </span>\n            <span className='headerTitle'>G</span>\n            <span className='headerTitle'>i</span>\n            <span className='headerTitle'>r</span>\n            <span className='headerTitle'>l</span>\n            <span className='headerTitle'>,</span>\n        </div>\n        )\n    }","import React from 'react';\n\n\nfunction Video (props) {\n    const {url, title, start, end, mute} = props.video;\n    return (\n        <iframe id={title} title={title} width=\"700\" height=\"550\" src={`https://www.youtube.com/embed/${url}?autoplay=1&start=${start}&end=${end}&mute=${mute}&controls=0`} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n    )\n}\n \n\nexport default Video;","import React, {Component} from 'react';\nimport Video from './Video';\n\nexport default class VideoProgram extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoIndex: 0,\n            currentVideo: {}, \n            running: false,\n            ended: true\n        };\n    }\n    \n    componentDidMount() {\n        if(this.checkVideo()){\n            this.start();\n        };\n    }\n\n    hasVideoData(){\n        if(!this.props.videos.length) console.log(\"No videos found\");\n        try{\n            if(this.props.videos.length) return true\n        }\n        catch (e){\n            console.log(e);\n        }\n    }\n\n    videoIndexIsGood(){\n        if(this.state.videoIndex > -1 && this.state.videoIndex < this.props.videos.length){\n            return true;\n        } else return false\n    }\n\n    checkVideo(){\n        if(this.hasVideoData() &&  this.videoIndexIsGood()){\n            return true\n        }\n    }\n\n    async start(){\n        await this.setState({\n            videoIndex: 0,\n            currentVideo: this.props.videos[0],\n            ended: false,\n            running: true\n        });\n        setTimeout(() => {\n            this.nextVideo();\n        }, this.state.currentVideo.delay * 1000);\n    }\n\n    play(){\n        this.setState({\n            running: true\n        });\n        this.nextVideo();\n    }\n\n    playPause(){\n        this.setState({\n            running: !this.state.running\n        })\n    }\n\n    stop(){\n        console.log('stop')\n        this.setState({\n            ended: true\n        })\n    }\n\n    nextVideo(reset) {\n        let newIndex = this.state.videoIndex + 1;\n\n        // if last video, repeat\n        if(this.state.videoIndex === this.props.videos.length -1){\n                this.start();\n\n        // go to next video\n        } else {\n            this.setState({\n                videoIndex: newIndex,\n                currentVideo: this.props.videos[newIndex]\n              });\n            setTimeout(()=>{\n                  this.nextVideo();\n            }, this.state.currentVideo.delay * 1000)\n        }\n    \n    }\n  \n    render() {\n        if (this.state.currentVideo && this.state.currentVideo.url){\n            return (\n              < Video video={this.state.currentVideo}/>\n            );\n\n        } else {\n            return (\n                null\n            )\n        }\n    }\n  }","import React from 'react';\n\n\nfunction Image (props) {\n    const { url, title } = props.image;\n    return (\n        <img id={title} alt={title} src={url}></img>\n    )\n}\n \n\nexport default Image;","import React from 'react';\n\n\nfunction Text (props) {\n    const { text, title } = props.text;\n    return (\n        <div className='image-text' id={title}>{text}</div>\n    )\n}\n \n\nexport default Text;","import React, {Component} from 'react';\nimport Image from './Image';\nimport Text from './Text';\n\nexport default class ImageProgram extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageIndex: -1,\n            currentImage: {}, \n            running: false,\n            ended: true\n        };\n    }\n    \n    componentDidMount() {\n        if(this.hasImageData()){\n            this.start();\n        };\n    }\n\n    async hasImageData(){\n        if(!this.props.images.length) console.log(\"no data found\");\n        try{\n            if(this.props.images.length) {\n                await this.setState({\n                    imageIndex: 0\n                })\n            }\n            return (this.imageIndexIsGood())\n        }\n        catch (e){\n            console.log(e);\n        }\n    }\n\n    imageIndexIsGood(){\n        if(this.state.imageIndex > -1 && this.state.imageIndex < this.props.images.length){\n            return true;\n        } else return false\n    }\n\n    async start(){\n        await this.setState({\n            imageIndex: 0,\n            currentImage: this.props.images[0],\n            ended: false,\n            running: true\n        });\n        setTimeout(() => {\n            this.nextImage();\n        }, this.state.currentImage.delay * 1000);\n    }\n\n    play(){\n        this.setState({\n            running: true\n        });\n        this.nextImage();\n    }\n\n    playPause(){\n        this.setState({\n            running: !this.state.running\n        })\n    }\n\n    stop(){\n        this.setState({\n            ended: true\n        })\n    }\n\n    nextImage(reset) {\n        let newIndex = this.state.imageIndex + 1;\n\n        // if last video, repeat\n        if(this.state.imageIndex === this.props.images.length -1){\n                this.start();\n\n        // go to next video\n        } else {\n            this.setState({\n                imageIndex: newIndex,\n                currentImage: this.props.images[newIndex]\n              });\n            setTimeout(()=>{\n                  this.nextImage();\n            }, this.state.currentImage.delay * 1000)\n        }\n    \n    }\n  \n    render() {\n        return(\n            <div>\n                {this.state.currentImage && this.state.currentImage.text ? < Text text={this.state.currentImage}/> : null}\n                {this.state.currentImage && this.state.currentImage.url ? < Image image={this.state.currentImage}/>: null}\n            </div>\n        )\n    }\n  }","import React from 'react';\n\nexport default function (){\n    return <div id='mobileAlert'>If you are on mobile you will need to click play on the videos or watch it on a desktop, sorry...</div>\n}","import React from 'react';\nimport Header from './Header.js';\nimport VideoProgram from './VideoProgram.js';\nimport ImageProgram from './ImageProgram.js';\nimport MobileAlert from './MobileAlert.js';\nimport './App.css';\nimport './animations.css';\nimport videos from './videos.json';\nimport images from './images';\n\nfunction App () {\n  let isMobile = window.screen.width <= 580;\n\n    return (\n      <div className=\"App\">\n        {isMobile && < MobileAlert />}\n        < Header text=\"Annette\"/>\n        < VideoProgram videos={videos} />\n        < ImageProgram images={images} />\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}